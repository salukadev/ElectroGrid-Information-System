++ Payment ++

//Make a payment
http://localhost:9090/PaymentService/rest/payment/pay 
JSON:POST:JSON

{
  "bill": "999",
  "user": "444",
  "pay_type": "MasterCard",
  "amount": "999.99"
}

//Last transaction
http://localhost:9090/PaymentService/rest/payment/pay 
-:GET:JSON

//Get 10 recent transactions of a specific user
http://localhost:9090/PaymentService/rest/payment/recent/{user-id}
-:GET:JSON

//Get transaction by id
http://localhost:9090/PaymentService/rest/payment/id/12
-:GET:JSON

//Delete payment by id
http://localhost:9090/PaymentService/rest/payment/id/12
-:DELETE:Text

//Update payment status(Act as a webhook for payment gw providers)
http://localhost:9090/PaymentService/rest/payment/gw_webhook
JSON:PUT:JSON

[Required headers for authorization]
token=sliit999

{
  "id": "21",
  "status": "Completed"
}

Returns relevant http status codes depending on the result
Ex: 200 for success, 400 for errors, 401 for unauthorized access 


++ Billing ++

//Check microservice status
http://localhost:9090/BillingService/rest/billing/

//Create test entries in bills table (Later,this method will be automatically called once a month, when the consumption service reports/messages aggregated usage for the same month )
http://localhost:9090/BillingService/rest/billing/new


//Get last [x] bills for a specific account
JSON:SEND:JSON

{
    "accNo":"199",
    "length":"2"
}


//Get bill by id 
http://localhost:9090/BillingService/rest/billing/bill/30
-:GET:JSON


//Update bill after a payment
http://localhost:9090/BillingService/rest/billing/bill
JSON:PUT:-

{
    "billId":3,
    "amount":1000.7
}